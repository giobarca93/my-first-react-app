{"ast":null,"code":"import _slicedToArray from \"/Users/giovaniminchola/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/giovaniminchola/Desktop/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { stat } from 'fs';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"x\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, moves)));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/giovaniminchola/Desktop/my-app/src/index.js"],"names":["React","ReactDOM","stat","Square","props","onClick","value","Board","Component","jumpTo","step","setState","stepNumber","xIsNext","renderSquare","i","squares","render","Game","constructor","state","history","Array","fill","handleClick","slice","current","length","calculateWinner","concat","winner","moves","map","move","desc","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { stat } from 'fs';\n\n\nfunction Square(props){\n    return(\n        <button className = \"square\" onClick = {props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    renderSquare(i) {\n        return (\n        <Square \n         value = {this.props.squares[i]}\n         onClick = {() => this.props.onClick(i)} \n        />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {history: [{ squares: Array(9).fill(null),}], stepNumber: 0, xIsNext: true,};\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? \"x\" : \"O\";\n        this.setState({ history: history.concat([{ squares: squares, }]), stepNumber: history.length, xIsNext: !this.state.xIsNext, });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n            \"Go to move #\" + move :\n            \"Go to game start\";\n            return (\n                <li key = {move}>\n                    <button onClick={() =>this.jumpTo(move)}>{desc}</button>\n                </li>\n            );\n        });\n\n\n        let status ;\n        if (winner){\n            status = \"Winner: \" + winner;\n\n        }else{\n            status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                    squares = {current.squares}\n                    onClick = {(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// ========================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for(let i = 0; i < lines.length; i++){\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n            return squares[a];\n        }\n    }\n    return null;\n}"]},"metadata":{},"sourceType":"module"}